package main

import (
	"fmt"

	"gopkg.in/yaml.v2"
)

type AutoGenerated struct {
	Services []Services `json:"services"`
	Log      Log        `json:"log"`
}
type Metadata struct {
	Interface string `json:"interface"`
}
type Handler struct {
	Type     string   `json:"type"`
	Metadata Metadata `json:"metadata"`
}
type Listener struct {
	Type     string   `json:"type"`
	Metadata Metadata `json:"metadata"`
}
type Services struct {
	Name     string   `json:"name"`
	Addr     string   `json:"addr"`
	Handler  Handler  `json:"handler"`
	Listener Listener `json:"listener"`
	Metadata Metadata `json:"metadata"`
}
type Log struct {
	Level     string `json:"level"`
	Format    string `json:"format"`
	Output    string `json:"output"`
	LocalTime bool   `json:"localTime"`
}

func main() {

	AutoGenerated1 := AutoGenerated{
		Services: []Services{},
		Log: Log{
			Level:     "info",
			Format:    "json",
			Output:    "/root/app/gost/out.log",
			LocalTime: true,
		},
	}

	for i := 0; i < 9; i++ {
		Interface := fmt.Sprint("192.168.0.", i+13)

		AutoGenerated1.Services = append(AutoGenerated1.Services, Services{
			Name: fmt.Sprint("service-", i),
			Addr: Interface,
			Handler: Handler{
				Type: "auto",
				Metadata: Metadata{
					Interface: Interface,
				},
			},
			Listener: Listener{
				Type: "tcp",
				Metadata: Metadata{
					Interface: Interface,
				},
			},
			Metadata: Metadata{
				Interface: Interface,
			},
		})
		fmt.Printf("        - 192.168.0.%d/24\n", i+13)
	}

	i := 166

	fmt.Printf("        - 192.168.0.%d/24\n", i)

	Interface := fmt.Sprint("192.168.0.", i)

	AutoGenerated1.Services = append(AutoGenerated1.Services, Services{
		Name: fmt.Sprint("service-", i),
		Addr: Interface,
		Handler: Handler{
			Type: "auto",
			Metadata: Metadata{
				Interface: Interface,
			},
		},
		Listener: Listener{
			Type: "tcp",
			Metadata: Metadata{
				Interface: Interface,
			},
		},
		Metadata: Metadata{
			Interface: Interface,
		},
	})

	data, err := yaml.Marshal(&AutoGenerated1)
	if err != nil {
		panic(err)
	}

	fmt.Println(string(data))
}
